// Script para verificar y corregir estructura de tablas
require('dotenv').config();
const mysql = require('mysql2/promise');

async function verificarTablas() {
  const connection = await mysql.createConnection({
    host: process.env.DB_HOST || 'localhost',
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || '',
    database: process.env.DB_NAME || 'clinikdent',
    charset: 'utf8mb4'
  });

  try {
    console.log('‚úÖ Conectado a la base de datos');

    // Verificar estructura de tabla equipos
    const [equiposStructure] = await connection.execute('DESCRIBE equipos');
    console.log('üìã Estructura de tabla equipos:');
    console.table(equiposStructure);

    // Verificar si la columna categoria existe
    const hasCategoria = equiposStructure.some(col => col.Field === 'categoria');
    
    if (!hasCategoria) {
      console.log('‚ö†Ô∏è La columna categoria no existe, agreg√°ndola...');
      await connection.execute('ALTER TABLE equipos ADD COLUMN categoria VARCHAR(50) NOT NULL DEFAULT "General"');
      console.log('‚úÖ Columna categoria agregada');
    }

    // Verificar si la columna precio existe
    const hasPrecio = equiposStructure.some(col => col.Field === 'precio');
    
    if (!hasPrecio) {
      console.log('‚ö†Ô∏è La columna precio no existe, agreg√°ndola...');
      await connection.execute('ALTER TABLE equipos ADD COLUMN precio DECIMAL(10,2) DEFAULT 0.00');
      console.log('‚úÖ Columna precio agregada');
    }

    // Ahora insertar datos
    const [equiposCount] = await connection.execute('SELECT COUNT(*) as total FROM equipos');
    console.log(`üìä Equipos existentes: ${equiposCount[0].total}`);

    if (equiposCount[0].total === 0) {
      await connection.execute(`
        INSERT INTO equipos (nombre, categoria, precio, descripcion) VALUES
        ('Sill√≥n Dental El√©ctrico', 'Mobiliario', 2500000.00, 'Sill√≥n dental con sistema el√©ctrico'),
        ('Compresor de Aire', 'Equipos Base', 800000.00, 'Compresor libre de aceite'),
        ('Autoclave', 'Esterilizaci√≥n', 1200000.00, 'Autoclave de vapor'),
        ('L√°mpara de Fotocurado', 'Equipos Menores', 350000.00, 'L√°mpara LED para fotocurado'),
        ('Ultrasonido Dental', 'Equipos Menores', 280000.00, 'Equipo de ultrasonido para limpieza')
      `);
      console.log('‚úÖ Equipos insertados');
    } else {
      // Actualizar equipos existentes con categor√≠as si no las tienen
      await connection.execute(`
        UPDATE equipos SET 
          categoria = CASE 
            WHEN nombre LIKE '%Sill√≥n%' THEN 'Mobiliario'
            WHEN nombre LIKE '%Compresor%' THEN 'Equipos Base'
            WHEN nombre LIKE '%Autoclave%' THEN 'Esterilizaci√≥n'
            WHEN nombre LIKE '%L√°mpara%' OR nombre LIKE '%Fotocurado%' THEN 'Equipos Menores'
            WHEN nombre LIKE '%Ultrasonido%' THEN 'Equipos Menores'
            ELSE 'General'
          END
        WHERE categoria = 'General' OR categoria IS NULL
      `);
      console.log('‚úÖ Categor√≠as actualizadas en equipos existentes');
    }

    // Verificar sedes
    const [sedesCount] = await connection.execute('SELECT COUNT(*) as total FROM sedes');
    console.log(`üìä Sedes existentes: ${sedesCount[0].total}`);

    if (sedesCount[0].total === 0) {
      await connection.execute(`
        INSERT INTO sedes (nombre, direccion, telefono, ciudad, estado) VALUES
        ('Sede Principal', 'Carrera 15 #85-32', '601-2345678', 'Bogot√°', 'activa'),
        ('Sede Norte', 'Calle 140 #19-45', '601-2345679', 'Bogot√°', 'activa'),
        ('Sede Chapinero', 'Carrera 13 #63-18', '601-2345680', 'Bogot√°', 'activa')
      `);
      console.log('‚úÖ Sedes insertadas');
    }

    // Verificar inventario
    const [inventarioCount] = await connection.execute('SELECT COUNT(*) as total FROM inventario_equipos');
    console.log(`üìä Items inventario existentes: ${inventarioCount[0].total}`);

    if (inventarioCount[0].total === 0) {
      await connection.execute(`
        INSERT INTO inventario_equipos (sede_id, equipo_id, cantidad, descripcion) VALUES
        (1, 1, 3, 'Sillones principales en consultorios'),
        (1, 2, 1, 'Compresor central para toda la sede'),
        (1, 3, 2, 'Autoclave principal y de respaldo'),
        (2, 1, 2, 'Consultorios 1 y 2'),
        (2, 4, 4, 'L√°mparas de fotocurado'),
        (3, 1, 1, 'Consultorio especializado'),
        (3, 5, 2, 'Ultrasonidos para limpieza')
      `);
      console.log('‚úÖ Inventario insertado');
    }

    // Mostrar resumen final con datos
    console.log('\nüìä RESUMEN FINAL:');
    
    const [sedesFinal] = await connection.execute('SELECT COUNT(*) as total FROM sedes');
    const [equiposFinal] = await connection.execute('SELECT COUNT(*) as total FROM equipos');
    const [inventarioFinal] = await connection.execute('SELECT COUNT(*) as total FROM inventario_equipos');

    console.log(`   ‚úÖ Sedes: ${sedesFinal[0].total}`);
    console.log(`   ‚úÖ Equipos: ${equiposFinal[0].total}`);
    console.log(`   ‚úÖ Items inventario: ${inventarioFinal[0].total}`);

    // Mostrar algunos datos
    const [inventarioCompleto] = await connection.execute(`
      SELECT 
        ie.id,
        s.nombre as sede,
        e.nombre as equipo,
        e.categoria,
        ie.cantidad
      FROM inventario_equipos ie
      JOIN sedes s ON ie.sede_id = s.id
      JOIN equipos e ON ie.equipo_id = e.id
      LIMIT 5
    `);
    
    console.log('\nüîç MUESTRA DE INVENTARIO:');
    console.table(inventarioCompleto);

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await connection.end();
    console.log('\nüéâ Setup completado exitosamente');
  }
}

verificarTablas();
